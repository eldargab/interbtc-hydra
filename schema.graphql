enum IssueStatus {
  Completed
  Cancelled
  RequestedRefund
  Expired
  PendingWithBtcTxNotFound
  PendingWithBtcTxNotIncluded
  PendingWithTooFewConfirmations
  PendingWithEnoughConfirmations
}

type Issue @entity {
  "Issue request"
  id: String! @unique
  wrappedAmount: BigInt!
  userParachainAddress: String!
  bridgeFee: BigInt!
  griefingCollateral: BigInt!
  vaultWalletPubkey: String!
  creationBlock: Int!
  creationTimestamp: BigInt!
  vaultBackingAddress: String!
  vaultParachainAddress: String!
  btcTxId: String
  confirmations: Int
  btcBlockHeight: Int
  btcAmountSubmittedByUser: BigInt
  status: IssueStatus
  refundRequest: Refund @derivedFrom(field: "issue")
  executedAmountBTC: BigInt
}

type Refund @entity {
  id: String!
  issue: Issue!
  refundBtcAddress: String!
  refundAmountBTC: BigInt
}
